#!/bin/bash

if [ $# -ne 2 ]; then 
	echo "Usage: $0 <cluster name> <port to listen on>"
	exit 1
fi

basedir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

cluster=$1
port=$2 # port number is required because the `pg_wrapper` utilities provided by Ubuntu is not covering features such as `createdb`, `createuser` and the most general purpose `psql`, whose cluster filtering are all <host>:<port> based.

version=9.5

sudo su - postgres -c "pg_createcluster -p $port $version $cluster"
# drop it with 
#	shell> sudo su - postgres -c "pg_dropcluster $version $cluster"
# after stopping the cluster, or 
#	shell> sudo su - postgres -c "pg_dropcluster --stop $version $cluster"

pghome=/var/lib/postgresql
PGDATA="$pghome/$version/$cluster"
PGCONF="/etc/postgresql/$version/$cluster"

# set uid & gid
sudo su - root -c "chmod -R u+s $PGCONF"
sudo su - root -c "chmod -R g+s $PGCONF"
sudo su - postgres -c "touch $PGCONF/postgresql.conf"
sudo su - postgres -c "touch $PGCONF/pg_hba.conf"

sudo su - root -c "cat $basedir/../pg_hba_template.conf >  $PGCONF/pg_hba.conf"

sudo su - postgres -c "pg_ctlcluster $version $cluster start"
# stop it with 
#	shell> sudo su - postgres -c "pg_ctlcluster $version $cluster stop"
# or
#	shell> sudo su - postgres -c "pg_ctlcluster $version $cluster -m fast stop"

# create cluster user
sudo su - postgres -c "createuser -p $port -D -R -S cu"
# to remove 'cu', shell> sudo su - postgres -c "dropuser cu"
  
# create replica user
sudo su - postgres -c "createuser -p $port -D -R -S rep"
# to remove 'rep', shell> sudo su - postgres -c "dropuser rep"

# create database 'test'
dbname='test'

sudo su - postgres -c "createdb -p $port $dbname -E unicode -T template0"

schema='public'
# grant proper privileges of tables in database.schema, e.g. test.public to users 'cu' and 'rep'
sudo su - postgres -c "psql -p $port -d $dbname -c \"GRANT SELECT ON ALL TABLES IN SCHEMA $schema TO rep;\""
sudo su - postgres -c "psql -p $port -d $dbname -c \"GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA $schema TO cu;\""
