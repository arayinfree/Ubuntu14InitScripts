#!/bin/bash

version="9.5"
basedir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

sudo su - root -c "echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" > /etc/apt/sources.list.d/pgdg.list"

sudo su - root -c "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
  sudo apt-key add -
sudo apt-get update"

# To install PostgreSQL $version
sudo su - root -c "apt-get -y install postgresql-$version"

# To uninstall,
# 	shell> sudo su - root -c "apt-get autoremove postgresql-$version"
#	shell> sudo su - root -c "apt-get purge postgresql-$version"

pghome=/var/lib/postgresql
PGDATA="$pghome/$version/main"
PGCONF="/etc/postgresql/$version/main" # on Ubuntu, $PGCONF is different from $PGDATA to favor `pg_wrapper` by default, reference http://manpages.ubuntu.com/manpages/wily/man1/pg_wrapper.1.html 

# local OS user as $pghome and $PGCONF owner is by default 'postgres' without password
# local postgresql-server superuser is by default 'postgres' without password
# thus OS sudoer could operate properly as OS user 'postgres' and postgresql-server superuser 'postgres' by `sudo su - postgres -c "<command>"`

# set uid & gid
sudo su - root -c "chmod -R u+s $PGCONF"
sudo su - root -c "chmod -R g+s $PGCONF"
sudo su - postgres -c "touch $PGCONF/postgresql.conf"
sudo su - postgres -c "touch $PGCONF/pg_hba.conf"

sudo su - root -c "cat $basedir/postgresql_template.conf >  $PGCONF/postgresql.conf" # overwrites `listen_addresses` to allow non-local TCP connections 
sudo su - root -c "cat $basedir/pg_hba_template.conf >  $PGCONF/pg_hba.conf"

$basedir/stop
$basedir/start

# create cluster user
sudo su - postgres -c "createuser -D -R -S cu"
# to remove 'cu', shell> sudo su - postgres -c "dropuser cu"
  
# create replica user
sudo su - postgres -c "createuser -D -R -S rep"
# to remove 'rep', shell> sudo su - postgres -c "dropuser rep"

# create database 'test'
dbname='test'

$basedir/create_db_by_name_for_cu_and_rep $dbname

# to check privileges of a table, e.g. 'agent' in a database, e.g. 'test', to grantees
# shell> sudo su - postgres
# shell> psql -d $dbname -c "SELECT grantee, privilege_type FROM information_schema.role_table_grants WHERE table_name='agent';"

sudo su - root -c "apt-get -y install libpq-dev"
