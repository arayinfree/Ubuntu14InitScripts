#!/bin/bash

if [ $# -ne 3 ]; then 
	echo "Usage: $0 <postgres version> <cluster name> <port to listen on>"
	exit 1
fi

version=$1
cluster=$2
port=$3

basedir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# local OS user as $PGHOME and $PGCONF owner is by default 'postgres' without password
# local postgresql-server superuser is by default 'postgres' without password
# thus OS sudoer could operate properly as OS user 'postgres' and postgresql-server superuser 'postgres' by `sudo su - postgres -c "<command>"`

PGHOME=/var/lib/postgresql
PGDATA="$PGHOME/$version/$cluster"
PGCONF="/etc/postgresql/$version/$cluster" # on Ubuntu, $PGCONF is different from $PGDATA to favor `pg_wrapper` by default, reference http://manpages.ubuntu.com/manpages/wily/man1/pg_wrapper.1.html 

# set uid & gid
sudo su - root -c "chmod -R u+s $PGDATA"
sudo su - root -c "chmod -R g+s $PGDATA"

sudo su - root -c "chmod -R u+s $PGCONF"
sudo su - root -c "chmod -R g+s $PGCONF"

sudo su - postgres -c "touch $PGDATA/recovery.conf"
sudo su - postgres -c "touch $PGCONF/pg_hba.conf"

sudo su - root -c "cat $basedir/recovery_template.conf > $PGDATA/recovery.conf"
sudo su - root -c "cat $basedir/hba_template.conf > $PGCONF/pg_hba.conf"

sudo su - postgres -c "pg_ctlcluster $version $cluster start"
# stop it with 
#	shell> sudo su - postgres -c "pg_ctlcluster $version $cluster stop"
# or
#	shell> sudo su - postgres -c "pg_ctlcluster $version $cluster -m fast stop"
